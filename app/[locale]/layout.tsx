import type { Metadata, Viewport } from "next";
import { Lora } from "next/font/google";
import "../globals.css";
import { notFound } from "next/navigation";
import { hasLocale } from "next-intl";
import { getMessages, setRequestLocale } from "next-intl/server";
import { ViewTransitions } from "next-view-transitions";
import type React from "react";
import { Footer } from "@/components/footer";
import { Header } from "@/components/header";
import { Providers } from "@/components/providers";
import { ReactScan } from "@/components/react-scan";
import { ScrollTopButton } from "@/components/top-button";
import type { Locale } from "@/i18n/routing";
import { routing } from "@/i18n/routing";
import { cn } from "@/lib/utils";

const lora = Lora({
	display: "swap",
	variable: "--font-lora",
	subsets: ["latin"],
});

export const metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
} satisfies Metadata;

export const viewport = {
	minimumScale: 1,
	maximumScale: 1,
	initialScale: 1,
	userScalable: false,
	width: "device-width",
	height: "device-height",
	viewportFit: "cover",
} satisfies Viewport;

export const generateStaticParams = () =>
	routing.locales.map((locale) => ({ locale }));

export default async function RootLayout({
	children,
	modal,
	params,
}: Readonly<
	React.PropsWithChildren<{
		params: Promise<{ locale: Locale }>;
		modal: React.ReactNode;
	}>
>) {
	const [{ locale }, messages] = await Promise.all([params, getMessages()]);
	if (!hasLocale(routing.locales, locale)) {
		notFound();
	}

	setRequestLocale(locale);

	return (
		<ViewTransitions>
			<html lang={locale} suppressHydrationWarning>
				<ReactScan scan={false} />
				<body
					suppressHydrationWarning
					className={cn(
						"bg-cream-100/20 text-offgray dark:text-offgray-300 relative min-h-screen w-screen overflow-x-hidden dark:bg-[hsl(218,_13%,_8%)]",
						lora.variable,
					)}
				>
					<Providers locale={locale} messages={messages}>
						{children}
						{modal}
						<ScrollTopButton />
					</Providers>
				</body>
			</html>
		</ViewTransitions>
	);
}
